{"version":3,"sources":["firebase/firebaseConfig.js","types/types.js","actions/ui.js","helpers/loadNotes.js","helpers/fileUpload.js","actions/notes.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","routers/PrivateRoute.js","notes/NotesAppBar.js","notes/NoteScreen.js","components/journal/NothingSelected.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/JournalScreen.js","routers/PublicRoute.js","routers/AppRouter.js","reducers/notesReducer.js","reducers/uiReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","types","setError","err","type","payload","finishLoading","loadNotes","uid","a","collection","get","notesSnap","notes","forEach","snapHijo","push","id","data","fileUpload","file","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","activeNote","note","addNewNote","startLoadingNotes","dispatch","setNotes","startSaveNote","getState","url","noteToFirestore","doc","update","refreshNote","Swal","fire","title","deleteNote","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","login","displayName","catch","e","message","logout","useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","LoginScreen","useDispatch","loading","useSelector","state","ui","formValues","className","onSubmit","preventDefault","autoComplete","placeholder","onChange","disabled","onClick","signInWithPopup","src","alt","to","RegisterScreen","dispach","msgError","password2","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","console","log","startRegisterWithEmailAndPassword","AuthRouter","exact","path","component","PrivateRoute","isAuthenticated","Component","rest","props","NotesAppBar","active","style","display","files","text","allowOutsideClick","onBeforeOpen","showLoading","fileUrl","close","startUploading","document","querySelector","click","NoteScreen","handleInputChanged","activeId","useRef","useEffect","current","delete","startDeleting","NothingSelected","JournalEntry","date","noteDate","moment","backgroundSize","backgroundImage","format","JournalEntries","map","Sidebar","signOut","newNote","Date","getTime","add","JournalScreen","PublicRoute","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.19053da8.chunk.js","sourcesContent":["  import firebase from \"firebase/app\";\n  import \"firebase/firestore\";\n  import \"firebase/auth\";\n\n  // Your web app's Firebase configuration\n  const firebaseConfig = {\n    apiKey: \"AIzaSyCjsiIfDlsQE7_VstJ5U8D5KanlZT8O604\",\n    authDomain: \"react-app-bbf9f.firebaseapp.com\",\n    projectId: \"react-app-bbf9f\",\n    storageBucket: \"react-app-bbf9f.appspot.com\",\n    messagingSenderId: \"365916899372\",\n    appId: \"1:365916899372:web:9bd61dd9f5516a57652989\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n\n  const db = firebase.firestore();\n  const googleAuthProvider = new firebase.auth.GoogleAuthProvider();\n\n  export {\n    db,\n    googleAuthProvider,\n    firebase\n  }","export const types = {\n\n    login: '[Auth] Login',\n    logout: '[Auth] Logout',\n\n    uiSetError: \"[UI] Set Error\",\n    uiRemoveError: \"[UI] Remove Error\",\n\n    uiStartLoading: '[UI] Start loading',\n    uiFinishLoading: '[UI] Finish loading',\n\n    notesAddNew: \"[Notes] New note\",\n    notesActive: \"[Notes] Set active note\",\n    notesLoad: \"[Notes] Load notes\",\n    notesUpdated: \"[Notes] Updated note\",\n    notesFileUrl: \"[Notes] Updated image url\",\n    notesDelete: \"[Notes] Delete note\",\n    notesLogoutCleaning: \"[Notes] Logout cleaning\"\n\n    \n}","import { types } from \"../types/types\";\n\nexport const setError = ( err ) => ({\n    type: types.uiSetError,\n    payload: err\n});\n\nexport const removeError = () => ({\n    type: types.uiRemoveError,\n});\n\nexport const startLoading = () => ({\n    type: types.uiStartLoading,\n});\n\nexport const finishLoading = () => ({\n    type: types.uiFinishLoading,\n});","import { db } from \"../firebase/firebaseConfig\"\n\nexport const loadNotes = async (uid) => {\n\n   const notesSnap = await db.collection(`${ uid }/journal/notes`).get();\n   const notes = [];\n\n    notesSnap.forEach( snapHijo => {\n        notes.push({\n            id: snapHijo.id,\n            ...snapHijo.data()\n        })\n    });\n\n   return notes;\n}","export const fileUpload = async( file ) => {\n    const cloudUrl = \"https://api.cloudinary.com/v1_1/dwk5wkuhd/upload\";\n\n    const formData = new FormData();    \n    formData.append(\"upload_preset\", \"react-journal\");\n    formData.append(\"file\", file);\n\n    try {\n        const resp = await fetch( cloudUrl, {\n            method: \"POST\",\n            body: formData\n        });\n\n        if(resp.ok){\n            const cloudResp = await resp.json();\n            return cloudResp.secure_url;\n        } else {\n            throw await resp.json();\n        }\n\n    } catch (error) {\n        throw error;\n    }\n}","import Swal from 'sweetalert2';\n\nimport { db } from \"../firebase/firebaseConfig\";\nimport { types } from '../types/types';\nimport { loadNotes } from \"../helpers/loadNotes\";\nimport { fileUpload } from '../helpers/fileUpload';\n\nexport const startNewNote = () => {\n    return async ( dispatch, getState ) => {\n\n        const {uid} = getState().auth;\n        \n        const newNote = {\n            title: \"\",\n            body: \"\",\n            date: new Date().getTime()\n        }\n\n        const doc = await db.collection(`${uid}/journal/notes`).add( newNote );\n\n        dispatch( activeNote(doc.id, newNote));\n        dispatch( addNewNote(doc.id, newNote));\n    }\n}\n\nexport const activeNote = (id, note) => ({\n    type: types.notesActive,\n    payload: {\n        id,\n        ...note\n    }\n});\n\nexport const addNewNote = (id, note) => ({\n    type: types.notesAddNew,\n    payload: {\n        id, ...note\n    }\n})\n\nexport const startLoadingNotes = (uid) => {\n    return async ( dispatch ) => {\n        const notes = await loadNotes( uid );\n        dispatch( setNotes(notes));\n\n    }\n}\n\nexport const setNotes = ( notes ) => ({\n    type: types.notesLoad,\n    payload: notes\n});\n\n// Actualizar nota actual\nexport const startSaveNote = ( note ) => {\n\n    return async( dispatch, getState ) => {\n\n        const { uid } = getState().auth;\n\n        if( !note.url ) {\n            delete note.url\n        }\n\n        const noteToFirestore = { ...note };\n        delete noteToFirestore.id;\n\n        await db.doc(`${ uid }/journal/notes/${ note.id}`).update( noteToFirestore );\n\n        dispatch(refreshNote( note.id, noteToFirestore ));\n        Swal.fire(\"saved\", note.title, \"success\");\n    }\n}\n\n// Actualiza el panel lateral\nexport const refreshNote = ( id, note ) => ({\n    type: types.notesUpdated,\n    payload: {\n        id,\n        note: {\n            id,\n            ...note\n        }\n    }\n});\n\nexport const startUploading = (file) => {\n\n    return async (dispatch, getState) => {\n\n        const {active:activeNote} = getState().notes;\n\n        Swal.fire({\n            title: \"Uploading...\",\n            text: \"Please wait\",\n            allowOutsideClick: false,\n            onBeforeOpen: () => {\n                Swal.showLoading();\n            }\n        });\n\n        const fileUrl = await fileUpload( file );\n        activeNote.url = fileUrl;\n\n        dispatch( startSaveNote( activeNote ))\n        Swal.close();\n    }\n}\n\nexport const startDeleting = (id) => {\n    return async (dispatch, getState) => {\n\n        const uid = getState().auth.uid;\n        await db.doc(`${uid}/journal/notes/${id}`).delete();\n\n        dispatch( deleteNote(id) );\n    }\n}\n\nexport const deleteNote = ( id ) => ({\n    type: types.notesDelete,\n    payload: id\n});\n\nexport const noteLogout = () => ({\n    type: types.notesLogoutCleaning\n});","import Swal from 'sweetalert2';\nimport {firebase, googleAuthProvider} from '../firebase/firebaseConfig';\nimport { types } from '../types/types';\nimport { finishLoading, startLoading } from './ui';\nimport { noteLogout } from './notes';\n\nexport const startLoginEmailPassword = (email, password) => {\n    return (dispatch) => {\n\n        dispatch(\n            startLoading()\n        )\n\n        firebase.auth().signInWithEmailAndPassword( email, password)\n            .then( ({user}) => {\n                dispatch(login( user.uid, user.displayName ))\n                dispatch( finishLoading())\n            })\n            .catch( e => {\n                dispatch( finishLoading())\n                Swal.fire(\"Error\", e.message, \"error\")\n            })\n            \n    }\n}\n\nexport const startRegisterWithEmailAndPassword = (email, password, name) => {\n    return (dispatch) => {\n\n        firebase.auth().createUserWithEmailAndPassword( email, password )\n            .then( async({user}) => {\n\n                await user.updateProfile({ displayName: name })\n\n                dispatch(\n                    login( user.uid, user.displayName )\n                )\n            })\n            .catch(e => {\n                console.log(e);\n                Swal.fire(\"Error\", e.message, \"error\")\n            })\n    }\n}\n\nexport const startGoogleLogin = () => {\n    return (dispatch) => {\n        firebase.auth().signInWithPopup( googleAuthProvider )\n        .then( ({user}) => {\n            dispatch(\n                login( user.uid, user.displayName )\n            )\n        });\n    }\n}\n\nexport const login = (uid, displayName) => ({\n    type: types.login,\n    payload: {\n        uid,\n        displayName,\n    }\n});\n\nexport const startLogout = () => {\n    return async ( dispatch ) => {\n        await firebase.auth().signOut();\n\n        dispatch( logout() );\n        dispatch( noteLogout() );\n    }\n}\n\nexport const logout = () => ({\n    type: types.logout\n});","import {useState} from 'react';\n\nexport const useForm = (initialState = {}) => {\n\n    const [ values, setValues ] = useState(initialState);\n\n    const reset = ( newFormState = initialState) => {\n        setValues(newFormState)\n    }\n\n    const handleInputChange = ({target}) => {\n        setValues({\n            ...values,\n            [target.name] : target.value\n        });\n    }\n\n    return [\n        values, handleInputChange, reset\n    ]\n}","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom'\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth';\nimport { useForm } from '../../hooks/useForm';\n\nexport const LoginScreen = () => {\n\n    const dispatch = useDispatch();\n\n    const { loading } = useSelector(state => state.ui);\n\n    const [ formValues, handleInputChange ] = useForm({\n        email: 'memolvpz@gmail.com',\n        password: 'Jvera#280295'\n    });\n\n    const { email, password } = formValues;\n\n    const handleLogin = (e) => {\n        e.preventDefault();\n        dispatch(startLoginEmailPassword(email, password));\n    }\n\n    const handleGoogleLogin = () => {\n        dispatch( startGoogleLogin() );\n    }\n\n    return (\n        <>\n            <h3 className=\"auth__title\">Login</h3>\n\n            <form \n                onSubmit={ handleLogin }\n                className=\"animate__animated animate__fadeIn animate__faster\" \n            >\n\n                <input\n                    autoComplete=\"off\"\n                    className=\"auth__input\"\n                    type=\"text\"\n                    placeholder=\"Email\"\n                    name=\"email\"\n                    value={ email }\n                    onChange={ handleInputChange }\n                />\n\n                <input\n                    className=\"auth__input\"\n                    type=\"password\"\n                    placeholder=\"password\"\n                    name=\"password\"\n                    value={ password }\n                    onChange={ handleInputChange }\n                />\n\n                <button\n                    className=\"btn btn-primary btn-block\"\n                    type=\"submit\"\n                    disabled={ loading }\n                >\n                    Login\n                </button>\n                \n                <div className=\"auth__social-networks\">\n                    <p>Login with social networks</p>\n\n                    <div \n                        className=\"google-btn\"\n                        onClick={ handleGoogleLogin }\n                    >\n                    <div className=\"google-icon-wrapper\">\n                        <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\n                    </div>\n                        <p className=\"btn-text\">\n                            <b>Sign in with google</b>\n                        </p>\n                    </div>\n                </div>\n\n                <Link className=\"link\" to=\"/auth/register\">\n                    Create a new account\n                </Link>\n            </form>\n        </>\n    )\n}\n","import React from 'react';\nimport validator from 'validator';\nimport { Link } from 'react-router-dom';\nimport { useForm } from \"../../hooks/useForm\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { removeError, setError } from '../../actions/ui';\nimport { startRegisterWithEmailAndPassword } from '../../actions/auth';\n\nexport const RegisterScreen = () => {\n\n    const dispach = useDispatch();\n    const {msgError} = useSelector( state => state.ui );\n\n    const [ formValues, handleInputChange ] = useForm({\n        name: '',\n        email: '',\n        password: '',\n        password2: '',\n    });\n    \n    const { name, email, password, password2 } = formValues;\n\n    const handleRegister = (e) => {\n        e.preventDefault();\n\n        if( isFormValid() ){\n            dispach( startRegisterWithEmailAndPassword(email, password, name) )\n        }\n    }\n\n    const isFormValid = () => {\n\n        if(name.trim().length === 0){\n            dispach(setError('Name is required'));\n            return false;\n        } else if( !validator.isEmail( email ) ){\n            dispach(setError(\"Email is required\"));\n            return false;\n        } else if (password !== password2 || password.length < 5){\n            dispach(setError(\"Password should be higher than 5 characters\"));\n            return false;\n        }\n        dispach(removeError(\"Its Okay\"));\n        return true\n    }\n\n    return (\n        <>\n        <h3 className=\"auth__title\">Register</h3>\n\n        {\n            msgError && \n            (\n                <div className=\"auth__alert-error\">\n                    { msgError }\n                </div>\n            )\n        }\n\n        <form \n            onSubmit={ handleRegister }\n            className=\"animate__animated animate__fadeIn animate__faster\"\n        >\n\n            <input\n                    autoComplete=\"off\"\n                    className=\"auth__input\"\n                    type=\"text\"\n                    placeholder=\"Name\"\n                    name=\"name\"\n                    value={ name }\n                    onChange={ handleInputChange }\n            />\n\n            <input\n                autoComplete=\"off\"\n                className=\"auth__input\"\n                type=\"text\"\n                placeholder=\"Email\"\n                name=\"email\"\n                value={ email }\n                onChange={ handleInputChange }\n            />\n\n            <input\n                className=\"auth__input\"\n                type=\"password\"\n                placeholder=\"Password\"\n                name=\"password\"\n                value={ password }\n                onChange={ handleInputChange }\n            />\n\n            <input\n                className=\"auth__input\"\n                type=\"password\"\n                placeholder=\"Confirm password\"\n                name=\"password2\"\n                value={ password2 }\n                onChange={ handleInputChange }\n            />\n\n            <button\n                className=\"btn btn-primary btn-block mb-5\"\n                type=\"submit\"\n            >\n                Register\n            </button>\n\n            <Link className=\"link\" to=\"/auth/login\">\n                Already registered?\n            </Link>\n        </form>\n        </>\n    )\n}\n","import React from 'react'\nimport { Route, Redirect, Switch } from 'react-router-dom';\n\nimport { LoginScreen } from '../components/auth/LoginScreen';\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\n\nexport const AuthRouter = () => {\n    return (\n        \n        <div className=\"auth__main\">\n            <div className=\"auth__box-container\">\n\n                <Switch>\n                    <Route \n                        exact\n                        path=\"/auth/login\" \n                        component={LoginScreen} \n                    />\n                    <Route \n                        exact\n                        path=\"/auth/register\" \n                        component={RegisterScreen} \n                    />\n                    <Redirect to=\"/auth/login\" />\n                </Switch>\n\n            </div>\n        </div>\n    )\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { Route, Redirect } from \"react-router-dom\";\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                ? ( <Component { ...props } /> )\n                : ( <Redirect to=\"/auth/login\" /> )\n            )}\n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired,\n}","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { startSaveNote, startUploading } from '../actions/notes'\n\nexport const NotesAppBar = () => {\n\n    const dispatch = useDispatch();\n    const { active } = useSelector(state => state.notes);\n\n    const handleSave = () => {\n        dispatch( startSaveNote( active ) )\n    }\n\n    const handlePictureUpload = () => {\n        document.querySelector(\"#fileSelector\").click();\n    }\n\n    const handleFileChange = (e) => {\n        const file = e.target.files[0];\n        if(file){\n            dispatch(startUploading(file));\n        }\n    }\n    \n    return (\n        <div className=\"notes__appbar\">\n            <span>August 28, 2021</span>\n\n            <input \n                id=\"fileSelector\"\n                type=\"file\"\n                name=\"file\"\n                style={{display: 'none'}}\n                onChange={ handleFileChange }\n            />\n            <div>\n                <button \n                    className=\"btn\"\n                    onClick={ handlePictureUpload }\n                >\n                    Picture\n                </button>\n                <button \n                    className=\"btn\" \n                    onClick={ handleSave }\n                >\n                    Save\n                </button>\n            </div>\n        </div>\n    )\n}\n","import React, { useEffect, useRef } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useSelector } from 'react-redux'\nimport { activeNote, startDeleting } from '../actions/notes'\nimport { useForm } from '../hooks/useForm'\nimport { NotesAppBar } from './NotesAppBar'\n\nexport const NoteScreen = () => {\n\n    const {active: note} = useSelector(state => state.notes);\n    const [ formValues, handleInputChanged, reset ] = useForm( note );\n\n    const dispatch = useDispatch()\n    const activeId = useRef( note.id )\n\n    const { body, title, id } = formValues; \n\n    // Cambia la nota activa al cambiar de selección\n    useEffect(() => {\n        if( note.id !== activeId.current ){\n            reset( note );\n            activeId.current = note.id;\n        }\n    }, [note, reset])\n\n    useEffect(() => {\n        dispatch( activeNote( formValues.id, {...formValues}));\n    }, [formValues, dispatch]);\n\n    const handleDelete = () => {\n        dispatch(startDeleting(id));\n    }\n\n    return (\n        <div className=\"notes__main-content\">\n\n            <NotesAppBar />\n\n            <div className=\"notes__content\">\n                <form className=\"notes__content\">\n                    <input\n                        type=\"text\"\n                        placeholder=\"Some awesome title\"\n                        className=\"notes__title-inputs\"\n                        autoComplete=\"off\"\n                        value={ title }\n                        name=\"title\"\n                        onChange= { handleInputChanged }                    \n                    />\n\n                    <textarea \n                        className=\"notes__textarea\"\n                        placeholder=\"what happend today?\"\n                        value={ body }\n                        name=\"body\"\n                        onChange= { handleInputChanged }\n                    ></textarea>\n\n                    {\n                        (note.url) \n                        &&\n                        <div className=\"notes__image\">\n                        <img \n                            src={ note.url }\n                            alt=\"galaxy_image\"\n                        />\n                    </div>\n                    }\n                </form>\n                <button \n                    className=\"btn btn-danger\" \n                    onClick={ handleDelete }\n                >\n                    Delete\n                </button>\n\n            </div>\n        </div> \n    )\n}\n","import React from 'react'\n\nexport const NothingSelected = () => {\n    return (\n        <div className=\"nothing__main-content\">\n            <p>\n                Select something \n                <br/>\n                or create something\n            </p>\n\n            <i className=\"far fa-star fa-4x mt-5\"></i>\n        </div>\n    )\n}\n","import React from 'react';\nimport moment from 'moment';\nimport { useDispatch } from 'react-redux';\nimport { activeNote } from '../../actions/notes';\n\nexport const JournalEntry = ({ id, date, title, body, url }) => {\n\n    const noteDate = moment(date);\n    const dispatch = useDispatch();\n\n    const handleEntryClick = () => {\n        dispatch(activeNote(id, {\n            date, title, body, url\n        }))\n    }\n\n    return (\n        <div \n            className=\"journal__entry pointer animate__animated animate__fadeIn animate__faster\"\n            onClick={ handleEntryClick }\n        >\n\n        { \n            url  &&\n            <div \n                className=\"journal__entry-picture\"\n                style={{\n                    backgroundSize: \"cover\",\n                    backgroundImage: `url( ${ url })`\n                }}\n            ></div>\n        }\n\n            <div className=\"journal__entry-body\">\n                <p className=\"journal__entry-title\"> { title } </p>\n                <p className=\"journal__entry-content\"> { body } </p>\n            </div>\n\n            <div className=\"journal__entry-date-box\">\n                <span>{ noteDate.format(\"dddd\")}</span>\n                <h4>{ noteDate.format(\"Do\")}</h4>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux';\nimport { JournalEntry } from './JournalEntry';\n\nexport const JournalEntries = () => {\n\n    const {notes} = useSelector(state => state.notes)\n\n    return (\n        <div className=\"journal__entries\">\n            {\n                notes.map( note => (\n                    <JournalEntry \n                        key={note.id}\n                        { ...note }\n                    \n                    />\n                ))\n            }\n        </div>\n    )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { startLogout } from '../../actions/auth';\nimport { startNewNote } from '../../actions/notes';\nimport { JournalEntries } from './JournalEntries'\n\n\nexport const Sidebar = () => {\n\n    const dispatch = useDispatch();\n    const { name } = useSelector( state => state.auth);\n\n    const handleLogout = () => {\n        dispatch( startLogout() )\n    }\n    \n    const handleAddNew = () => {\n        dispatch( startNewNote() );\n    }\n\n    return (\n        <aside className=\"journal__sidebar\">\n            <div className=\"journal__sidebar-navbar\">\n                <h3 className=\"mt-5\">\n                    <i className=\"far fa-moon\"></i>\n                    <span> {name} </span>\n                </h3>\n\n                <button \n                    className=\"btn\"\n                    onClick={ handleLogout }\n                >\n                    Logout\n                </button>\n            </div>\n\n            <div \n                className=\"journal__new-entry\"\n                onClick={ handleAddNew }\n            >\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\n                <p className=\"mt-5\">New entry</p>\n            </div>\n\n            <JournalEntries />\n        </aside>\n    )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { NoteScreen } from '../../notes/NoteScreen'\nimport { NothingSelected } from './NothingSelected'\nimport { Sidebar } from './Sidebar'\n\nexport const JournalScreen = () => {\n\n    const { active } = useSelector(state => state.notes);\n    \n    return (\n        <div \n            className=\"journal__main-content animate__animated animate__fadeIn animate__faster\"\n        >\n            \n            <Sidebar />\n\n            <main>\n                {\n                    (active)\n                        ? ( <NoteScreen />)\n                        : ( <NothingSelected />)\n                }\n            </main>\n        </div>\n    )\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Route, Redirect } from 'react-router-dom'\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route {...rest}\n            component={ (props) => (\n                ( isAuthenticated ) \n                ? ( <Redirect to=\"/\" /> )\n                : ( <Component {...props} /> )\n            )}\n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired,\n}","import React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Redirect, Switch  } from 'react-router-dom';\n\nimport { useDispatch } from 'react-redux';\n\nimport {firebase} from '../firebase/firebaseConfig';\nimport { AuthRouter } from './AuthRouter';\nimport { PrivateRoute } from './PrivateRoute';\n\nimport { JournalScreen } from \"../components/journal/JournalScreen\";\nimport { login } from '../actions/auth';\nimport { PublicRoute } from './PublicRoute';\nimport { startLoadingNotes } from '../actions/notes';\n\nexport const AppRouter = () => {\n\n    const dispatch = useDispatch();\n\n    const [checking, setChecking] = useState(true);\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n    // Mantiene el estado de la autenticación al recargar\n    useEffect(() => {\n\n        firebase.auth().onAuthStateChanged( async(user) => {\n\n            if( user?.uid ){\n                \n                dispatch( login(user.uid, user.displayName) );\n                setIsLoggedIn(true);\n                dispatch( startLoadingNotes(user.uid));\n\n            } else {\n                setIsLoggedIn(false);\n            }\n\n            setChecking(false);\n\n        });\n\n    }, [dispatch, setChecking, setIsLoggedIn])\n\n    if( checking ){\n        return(\n            <h1>Wait..</h1>\n        )\n    }\n\n    return (\n        <Router>\n            <div>\n                <Switch>\n\n                    <PublicRoute\n                        path=\"/auth\" \n                        component={ AuthRouter }\n                        isAuthenticated={ isLoggedIn }\n                    />\n\n                    <PrivateRoute \n                        exact\n                        isAuthenticated={ isLoggedIn }\n                        path=\"/\" \n                        component={ JournalScreen } \n                    />\n\n                    <Redirect to=\"/auth/login\"/>\n\n                </Switch>\n            </div>\n        </Router>\n    )\n}\n","import { types } from \"../types/types\";\n\nconst initialState = {\n    notes: [],\n    active: null,\n}\n\nexport const notesReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n\n        case types.notesActive:\n            return {\n                ...state,\n                active: {\n                    ...action.payload\n                }\n            }\n            \n        case types.notesAddNew:\n            return {\n                ...state,\n                notes: [action.payload, ...state.notes]\n            }\n        \n        case types.notesLoad:\n            return {\n                ...state,\n                notes: [...action.payload]\n            }\n        \n        case types.notesUpdated:\n            return {\n                ...state,\n                notes: state.notes.map(\n                    note => note.id === action.payload.id\n                        ? action.payload.note\n                        : note\n                )\n            }\n        case types.notesDelete:\n            return {\n                ...state,\n                active: null,\n                notes: state.notes.filter( note => note.id !== action.payload )\n            }\n        case types.notesLogoutCleaning:\n            return {\n                ...state,\n                active: null,\n                notes: [],\n            }\n        default:\n            return state;\n    }\n}\n\n","import { types } from \"../types/types\";\n\nconst initialState = {\n    loading: false,\n    msgError: null,\n}\n\nexport const uiReducer = ( state = initialState, action) => {\n\n    switch (action.type) {\n        case types.uiSetError:\n            return {\n                ...state,\n                msgError: action.payload,\n            }\n        case types.uiRemoveError:\n            return {\n                ...state,\n                msgError: null,\n            }\n        case types.uiStartLoading:\n            return {\n                ...state,\n                loading: true,\n            }\n        case types.uiFinishLoading:\n            return {\n                ...state,\n                loading: false\n            }\n\n\n    \n        default:\n            return state;\n    }\n\n}","import {createStore, combineReducers, applyMiddleware, compose} from 'redux';\nimport thunk from 'redux-thunk';\nimport { authReducer } from '../reducers/authReducer';\nimport { notesReducer } from '../reducers/notesReducer';\nimport { uiReducer } from '../reducers/uiReducer';\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nconst reducers = combineReducers({\n    auth: authReducer,\n    ui: uiReducer,\n    notes: notesReducer,\n});\n\nexport const store = createStore(\n    reducers,\n    composeEnhancers(\n        applyMiddleware( thunk )\n    )\n);","import { types } from '../types/types';\n\n/* {\n    uuid: aasdasd131\n    name: 'Guillermo'\n} */\n\n\nexport const authReducer = (state = {}, action) => {\n    switch (action.type) {\n        case types.login:\n            return {\n                uid: action.payload.uid,\n                name: action.payload.displayName,\n            }\n        case types.logout:\n            return {}\n    \n        default:\n            return state;\n    }\n}","import React from \"react\"\nimport { Provider } from \"react-redux\"\n\nimport { AppRouter } from \"./routers/AppRouter\"\nimport { store } from \"./store/store\";\n\nexport const JournalApp = () => {\n    return (\n        <Provider store={ store }>\n            <AppRouter />\n        </Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { JournalApp } from './JournalApp';\nimport './styles/styles.scss'\n\nReactDOM.render(\n\n    <JournalApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}